small-row {
  display: flex;
  flex-flow: row nowrap;
  margin-left: auto;
  margin-right: auto;
  
  & > div {
    padding-left: 1em;
    padding-right: 1em;
    font-size: 0.9em;
    @media (max-width: $iPhoneLandscape) {
      font-size: 0.8em;
      padding-left: .3em;
      padding-right: .3em;
    }
    &:first-child { padding-left: 0; }
    &:last-child {  padding-right: 0; }
  }
  
  // Row: X alignment
  &,
  &[row~="center"]        { justify-content: center; }
  &[row~="left"]          { justify-content: flex-start; }
  &[row~="right"]         { justify-content: flex-end; }
  &[row~="space-around"]  { justify-content: space-around; }
  &[row~="space-between"] { justify-content: space-between; }
  
  // Row: Y size & alignment
  &,
  &[row~="center"]   { align-items: center; }
  &[row~="top"]      { align-items: flex-start; }
  &[row~="bottom"]   { align-items: flex-end; }
  &[row~="stretch"]  { align-items: stretch; }
  &[row~="baseline"] { align-items: baseline; }
  
  // Item in row: X size
  & > div           { flex: 0 1 auto; width: inherit; } // Shrink to fit content
  & > [row~="1/1"]  { flex: 0 0 auto; width: 100%; }
  & > [row~="1/2"]  { flex: 0 0 auto; width: 50%; }
  & > [row~="2/2"]  { flex: 0 0 auto; width: 100%; }
  & > [row~="1/3"]  { flex: 0 0 auto; width: 33.3%; }
  & > [row~="2/3"]  { flex: 0 0 auto; width: 66.6%; }
  & > [row~="3/3"]  { flex: 0 0 auto; width: 100%; }
  & > [row~="1/4"]  { flex: 0 0 auto; width: 25%; }
  & > [row~="2/4"]  { flex: 0 0 auto; width: 50%; }
  & > [row~="3/4"]  { flex: 0 0 auto; width: 75%; }
  & > [row~="4/4"]  { flex: 0 0 auto; width: 100%; }
  & > [row~="1/5"]  { flex: 0 0 auto; width: 20%; }
  & > [row~="2/5"]  { flex: 0 0 auto; width: 40%; }
  & > [row~="3/5"]  { flex: 0 0 auto; width: 60%; }
  & > [row~="4/5"]  { flex: 0 0 auto; width: 80%; }
  & > [row~="5/5"]  { flex: 0 0 auto; width: 100%; }
  & > [row~="1/6"]  { flex: 0 0 auto; width: 16.6%; }
  & > [row~="2/6"]  { flex: 0 0 auto; width: 33.3%; }
  & > [row~="3/6"]  { flex: 0 0 auto; width: 50%; }
  & > [row~="4/6"]  { flex: 0 0 auto; width: 66.6%; }
  & > [row~="5/6"]  { flex: 0 0 auto; width: 83.3%; }
  & > [row~="6/6"]  { flex: 0 0 auto; width: 100%; }
  & > [row~="1/7"]  { flex: 0 0 auto; width: 14.3%; }
  & > [row~="2/7"]  { flex: 0 0 auto; width: 28.6%; }
  & > [row~="3/7"]  { flex: 0 0 auto; width: 42.9%; }
  & > [row~="4/7"]  { flex: 0 0 auto; width: 57.1%; }
  & > [row~="5/7"]  { flex: 0 0 auto; width: 71.4%; }
  & > [row~="6/7"]  { flex: 0 0 auto; width: 85.7%; }
  & > [row~="7/7"]  { flex: 0 0 auto; width: 100%; }
  & > [row~="1/8"]  { flex: 0 0 auto; width: 12.5%; }
  & > [row~="2/8"]  { flex: 0 0 auto; width: 25%; }
  & > [row~="3/8"]  { flex: 0 0 auto; width: 37.5%; }
  & > [row~="4/8"]  { flex: 0 0 auto; width: 50%; }
  & > [row~="5/8"]  { flex: 0 0 auto; width: 62.5%; }
  & > [row~="6/8"]  { flex: 0 0 auto; width: 75%; }
  & > [row~="7/8"]  { flex: 0 0 auto; width: 87.5%; }
  & > [row~="8/8"]  { flex: 0 0 auto; width: 100%; }
  & > [row~="1/16"]  { flex: 0 0 auto; width: 6.25%; }
  & > [row~="2/16"]  { flex: 0 0 auto; width: 12.5%; }
  & > [row~="3/16"]  { flex: 0 0 auto; width: 18.75%; }
  & > [row~="4/16"]  { flex: 0 0 auto; width: 25%; }
  & > [row~="5/16"]  { flex: 0 0 auto; width: 31.25%; }
  & > [row~="6/16"]  { flex: 0 0 auto; width: 37.5%; }
  & > [row~="7/16"]  { flex: 0 0 auto; width: 43.75%; }
  & > [row~="8/16"]  { flex: 0 0 auto; width: 50%; }
  & > [row~="9/16"]  { flex: 0 0 auto; width: 56.25%; }
  & > [row~="10/16"]  { flex: 0 0 auto; width: 62.5%; }
  & > [row~="11/16"]  { flex: 0 0 auto; width: 68.75%; }
  & > [row~="12/16"]  { flex: 0 0 auto; width: 75%; }
  & > [row~="13/16"]  { flex: 0 0 auto; width: 81.25%; }
  & > [row~="14/16"]  { flex: 0 0 auto; width: 87.5%; }
  & > [row~="15/16"]  { flex: 0 0 auto; width: 93.75%; }
  & > [row~="16/16"]  { flex: 0 0 auto; width: 100%; }
  // All of the above use width rather than flex-basis: https://github.com/philipwalton/flexbugs#7-flex-basis-doesnt-account-for-box-sizingborder-box
  & > div {
    max-width: 100%; // Using max-width gives us the desired behaviour, but it also prevents a flexbug: https://github.com/philipwalton/flexbugs#2-column-flex-items-set-to-align-itemscenter-overflow-their-container
    min-width: 0%; // https://github.com/philipwalton/flexbugs#1-minimum-content-sizing-of-flex-items-not-honored
  }
  
  // Item in row: Y size & alignment
  & > [row~="top"]      { align-self: flex-start; }
  & > [row~="center"]   { align-self: center; }
  & > [row~="bottom"]   { align-self: flex-end; }
  & > [row~="stretch"]  { align-self: stretch; }
  & > [row~="baseline"] { align-self: baseline; }
}
