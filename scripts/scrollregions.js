// Generated by CoffeeScript 1.8.0
(function() {
  var loadScrollRegions;

  loadScrollRegions = function() {
    var handleScrollAreas, handleScrollBody, scrollAreas, scrollEnd, scrollEnds, scrollStart, scrollStarts, scrollVal, scrollValEnd, _i, _j, _len, _len1;
    scrollStarts = document.querySelectorAll('[scrollStart]');
    scrollEnds = document.querySelectorAll('[scrollEnd]');
    scrollAreas = [];
    for (_i = 0, _len = scrollStarts.length; _i < _len; _i++) {
      scrollStart = scrollStarts[_i];
      scrollVal = scrollStart.getAttribute('scrollStart');
      for (_j = 0, _len1 = scrollEnds.length; _j < _len1; _j++) {
        scrollEnd = scrollEnds[_j];
        scrollValEnd = scrollEnd.getAttribute('scrollEnd');
        if (scrollVal === scrollValEnd) {
          scrollAreas.push({
            start: scrollStart,
            stop: scrollEnd
          });
        }
      }
    }
    console.log(scrollAreas);
    handleScrollAreas = function() {
      var event, scrollArea, scrollAreaBottom, scrollAreaTop, scrollTop, value, _k, _len2, _results;
      scrollTop = document.body.scrollTop;
      _results = [];
      for (_k = 0, _len2 = scrollAreas.length; _k < _len2; _k++) {
        scrollArea = scrollAreas[_k];
        scrollAreaTop = scrollArea.start.offsetTop;
        scrollAreaBottom = scrollArea.stop.offsetTop;
        if (scrollTop > scrollAreaTop && scrollTop <= scrollAreaBottom) {
          value = (scrollTop - scrollAreaTop) / (scrollAreaBottom - scrollAreaTop);
          event = new CustomEvent("scrollPercentage", {
            "detail": {
              "value": value
            }
          });
          _results.push(scrollArea.start.dispatchEvent(event));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };
    handleScrollBody = function() {
      var event, scrollAreaBottom, scrollAreaTop, scrollTop, value;
      scrollAreaTop = document.body.offsetTop;
      scrollAreaBottom = document.body.offsetTop + document.body.scrollHeight - document.body.offsetHeight;
      scrollTop = document.body.scrollTop;
      value = (scrollTop - scrollAreaTop) / (scrollAreaBottom - scrollAreaTop);
      event = new CustomEvent("scrollPercentage", {
        "detail": {
          "value": value
        }
      });
      return document.body.dispatchEvent(event);
    };
    window.addEventListener("scroll", handleScrollAreas);
    return window.addEventListener("scroll", handleScrollBody);
  };

  window.addEventListener("load", loadScrollRegions);

}).call(this);
